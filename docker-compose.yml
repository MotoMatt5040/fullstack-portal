services:
  api:
    build:
      context: ./server
      target: production
    restart: unless-stopped
    env_file: 
      - .env.${COMPOSE_ENV:-production}
    environment:
      - NODE_ENV=${NODE_ENV}
      - DB_HOST=${DB_HOST}
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - JWT_SECRET=${JWT_SECRET}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_USER=${SMTP_USER}
      - SMTP_PASS=${SMTP_PASS}
    volumes:
      - ./server_logs:/logs
    networks:
      - mern-app

  client:
    build: 
      context: ./client
      target: production
      args:
        - VITE_DEV_API_URL=${VITE_DEV_API_URL:-}
        - VITE_DOMAIN_NAME=${VITE_DOMAIN_NAME}
        - VITE_ENV=${VITE_ENV}
        - API_URL=${API_URL}
    restart: unless-stopped
    env_file:
      - .env.${COMPOSE_ENV:-production}
    networks:
      - mern-app
    depends_on:
      - api

  caddy:
    build:
      context: ./caddy
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - VITE_DOMAIN_NAME=${VITE_DOMAIN_NAME}
      - API_URL=${API_URL}
      - CLIENT_URL=${CLIENT_URL}
    volumes:
      - caddy_data:/caddy_data
      - caddy_config:/caddy_config
      - /var/log/caddy_logs:/var/log/caddy
    networks:
      - mern-app
    depends_on:
      - api
      - client

volumes:
  caddy_data:
  caddy_config:
networks:
  mern-app:
    driver: bridge